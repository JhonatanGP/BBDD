ALTER SESSION SET nls_date_format='DD-MM-YYYY HH24:MI:SS';
DROP TABLE FUTBOLISTAS CASCADE CONSTRAINTS;
DROP TABLE EQUIPOS CASCADE CONSTRAINTS;
DROP TABLE PARTIDOS CASCADE CONSTRAINTS;

CREATE TABLE FUTBOLISTAS(
ID CHAR(6) PRIMARY KEY CHECK( REGEXP_LIKE( ID, 'F[0-9][0-9][0-9]20' )),
NOMBRE VARCHAR(100),
APELLIDOS VARCHAR(300),
FECHA_NACIMIENTO DATE,
POSICION VARCHAR(50) CHECK( POSICION LIKE 'PORTERO' OR POSICION LIKE 'DEFENSA' OR POSICION LIKE 'MEDIOCENTRO' OR POSICION LIKE 'DELANTERO' ),
SALARIO NUMBER(12,2) CHECK( SALARIO > 50000),
ID_EQUIPO INT
);

CREATE TABLE EQUIPOS(
ID INT PRIMARY KEY,
NOMBRE VARCHAR(100),
ESTADIO VARCHAR(100),
PRESUPUESTO NUMBER(20,2)
);

CREATE TABLE PARTIDOS(
ID INT PRIMARY KEY,
ARBITRO VARCHAR(200),
RESULTADO VARCHAR(5) CHECK( REGEXP_LIKE( RESULTADO, '[0-9][0-9]-[0-9][0-9]' )),
ESTADIO VARCHAR(100),
FECHA DATE,
ID_EQUIPO_CASA INT,
ID_EQUIPO_FUERA INT
);

ALTER TABLE FUTBOLISTAS
ADD CHECK (FECHA_NACIMIENTO > '31/DEC/1974');
ALTER TABLE FUTBOLISTAS
ADD FOREIGN KEY (ID_EQUIPO) REFERENCES EQUIPOS(ID);

ALTER TABLE PARTIDOS
ADD FOREIGN KEY (ID_EQUIPO_CASA) REFERENCES EQUIPOS(ID);
ALTER TABLE PARTIDOS
ADD FOREIGN KEY (ID_EQUIPO_FUERA) REFERENCES EQUIPOS(ID);

DELETE FROM EQUIPOS;
INSERT INTO EQUIPOS VALUES (1,'EQUIPO A', 'ESTADIO A',1000000);
INSERT INTO EQUIPOS VALUES (2,'EQUIPO B', 'ESTADIO B',2000000);
INSERT INTO EQUIPOS VALUES (3,'EQUIPO C', 'ESTADIO C',3000000);

DELETE FROM FUTBOLISTAS;
INSERT INTO FUTBOLISTAS VALUES ('F00120','PEDRO','GOMEZ','22/01/1980','PORTERO',100000,1);
INSERT INTO FUTBOLISTAS VALUES ('F00220','PEDRO LUIS','GOMEZ','20/04/1985','DEFENSA',110000,1);
INSERT INTO FUTBOLISTAS VALUES ('F00320','LUIS','GALVEZ','12/01/1990','DELANTERO',80000,1);
INSERT INTO FUTBOLISTAS VALUES ('F00420','ANTONIO','DOMINGUEZ','25/06/1981','PORTERO',340000,2);
INSERT INTO FUTBOLISTAS VALUES ('F00520','JESUS','FERNANDEZ','02/01/1995','MEDIOCENTRO',140000,2);
INSERT INTO FUTBOLISTAS VALUES ('F00620','DIEGO','DIAZ','05/04/1987','PORTERO',160000,2);
INSERT INTO FUTBOLISTAS VALUES ('F00720','PABLO','CARO','27/01/1988','DEFENSA',200000,3);
INSERT INTO FUTBOLISTAS VALUES ('F00820','ESTEBAN','BENITEZ','29/09/2000','DEFENSA',300000,3);
INSERT INTO FUTBOLISTAS VALUES ('F00920','ENRIQUE','ALVAREZ','30/09/2001','MEDIOCENTRO',120000,3);

DELETE FROM PARTIDOS;
INSERT INTO PARTIDOS VALUES (1,'ARBITRO A','00-00','ESTADIO A','01/01/2020',1,2);
INSERT INTO PARTIDOS VALUES (2,'ARBITRO B','01-00','ESTADIO A','08/01/2020',1,3);
INSERT INTO PARTIDOS VALUES (3,'ARBITRO C','01-01','ESTADIO B','15/01/2020',2,3);
INSERT INTO PARTIDOS VALUES (4,'ARBITRO B','02-00','ESTADIO B','22/01/2020',2,1);
INSERT INTO PARTIDOS VALUES (5,'ARBITRO A','04-01','ESTADIO C','29/01/2020',3,1);
INSERT INTO PARTIDOS VALUES (6,'ARBITRO A','03-03','ESTADIO C','05/02/2020',3,2);

UPDATE FUTBOLISTAS SET ID_EQUIPO = 2 WHERE ID LIKE 'F00120';
UPDATE FUTBOLISTAS SET ID_EQUIPO = 3 WHERE ID LIKE 'F00420';
UPDATE FUTBOLISTAS SET ID_EQUIPO = 1 WHERE ID LIKE 'F00920';

DELETE FROM FUTBOLISTAS WHERE ID LIKE 'F00120' OR ID LIKE 'F00420';

--PDF 1 TEMA 4
 /*EJ 1 
?Obtén el nombre de todos los futbolistas de la base de datos. 
? Ahora queremos saber la posición que ocupan estos futbolistas (aunque se repitan los valores).
? Se quiere saber las posiciones existentes por lo que se requiere la posición de los futbolistas sin que se repitan los valores.*/
SELECT * FROM FUTBOLISTAS;
SELECT NOMBRE FROM FUTBOLISTAS;
SELECT POSICION FROM FUTBOLISTAS;
SELECT DISTINCT POSICION FROM FUTBOLISTAS;

SELECT * FROM PARTIDOS;
SELECT ESTADIO "ESTADIO", ID_EQUIPO_CASA "ID LOCAL" FROM PARTIDOS;

/*EJ 2
? Obtén todas las posiciones posibles (diferentes) de los futbolistas bajo el encabezado “Demarcaciones”.
? Muestra todos los datos almacenados de todos los futbolistas. */
SELECT DISTINCT POSICION "DEMARCACIONES" FROM FUTBOLISTAS;
SELECT * FROM FUTBOLISTAS;

/* EJ 3
? Devuelve los apellidos de los futbolistas que su posición sea DEFENSA. Aplica un alias a apellidos
para que se muestre “Futbolista” y asigna el alias F a la tabla futbolistas. */
SELECT F.APELLIDOS "FUTBOLISTA" FROM FUTBOLISTAS F WHERE F.POSICION = 'DEFENSA';

SELECT * FROM FUTBOLISTAS ORDER BY NOMBRE;
SELECT * FROM futbolistas ORDER BY 2; --ES LO MISMO

/*Ejercicio 4
Devuelve los apellidos de los futbolistas que su posición sea DEFENSA ordenador de la Z a la A.*/
SELECT APELLIDOS FROM FUTBOLISTAS WHERE POSICION  = 'DEFENSA' ORDER BY APELLIDOS DESC;

/*Ejercicio 5
Devuelve todos los datos de futbolistas ordenados primero por posición y luego por apellidos.*/
SELECT * FROM FUTBOLISTAS ORDER BY POSICION,APELLIDOS;

--  DUAL Y OPERADORES
SELECT * FROM DUAL;
SELECT 5*4 AS "RESULTADO" FROM DUAL;

SELECT *FROM futbolistas;
SELECT NOMBRE FROM FUTBOLISTAS WHERE NOMBRE LIKE 'P%'; -- % DETRAS DE % DA IGUAL LA PRIMERA DEBE SER P
SELECT NOMBRE FROM FUTBOLISTAS WHERE NOMBRE LIKE '%E%'; -- % PARA QUE EMPIECE O TERMINE PERO QUE TENGA E 
SELECT NOMBRE FROM FUTBOLISTAS WHERE NOMBRE LIKE '_E%'; -- % DELANTE DE E SE PONE _ PUEDE SER CUALQUIERA, DETRAS DE % DA IGUAL
SELECT NOMBRE FROM FUTBOLISTAS WHERE NOMBRE LIKE '%E'; -- % QUE TERMINE EN E

/*Ejercicio 6
? Obtén el nombre de los futbolistas que cobran más de 150.000 euros (SALARIO).
? Muestra el ID de los futbolistas cuyo apellido sea GÓMEZ.
? Indica los apellidos de los futbolistas que empiezan por G.
? Devuelve todos los datos de los futbolistas cuya posición sea DEFENSA o DELANTERO.
? Obtén el nombre de los futbolistas que cobran entre 100.000 y 200.000 euros (SALARIO). */
SELECT NOMBRE FROM FUTBOLISTAS WHERE SALARIO > 150000;
SELECT ID FROM FUTBOLISTAS WHERE APELLIDOS = 'GOMEZ';
SELECT ID FROM FUTBOLISTAS WHERE APELLIDOS LIKE 'G%';

--ejercicio 6
select nombre from futbolistas where salario > 150000;
select id from futbolistas where apellidos = 'GOMEZ';
select apellidos from futbolistas where apellidos like 'G%';
select * from futbolistas where posicion = 'DEFENSA' or posicion = 'DELANTERO';
select * from futbolistas where posicion in ('DEFENSA','POSICION');
select nombre from futbolistas where salario between 100000 and 200000;
select nombre from futbolistas where salario > 100000 and salario < 200000;
select 4*5+2 from dual;
--SEGUIMOS POR LA TRANSPARENCIA 37

--5/12/2024

--Ejercicio 7
select nombre,apellidos "Apellidos",salario*1.10 "Nuevo salario" from futbolistas where posicion = 'PORTERO'order by apellidos;
ALTER SESSION SET nls_date_format='DD/MM/YYYY';
select 'hola' || sysdate from dual;
select 'La posición del futbolista ' || nombre || ' es ' || posicion "Descripción de los futbolistas" from futbolistas;
--Función concat(cad1,cad2) --> cad1cad2
select concat('hola',sysdate) from dual;
--Ejercicio 8
select nombre || ' es ' || posicion "Posiciones" from futbolistas;
 
select futbolistas.nombre || ' juega en ' || equipos.nombre from futbolistas,equipos where id_equipo = equipos.id;
--multitabla
--join
--subconsultas
 
--Ejercicio 9
select * from futbolistas where (salario > 150000) and (posicion = 'DEFENSA');
select * from futbolistas where (posicion = 'DEFENSA') and (salario > 150000);
 
--Ejercicio 11
select upper(lower(nombre)),salario,salario*1.5 || ' euros' "Salario bruto"	from futbolistas;
select concat(concat(id,' '),concat(nombre || ' ',apellidos)) "Ejemplo concat" from futbolistas;

select  nombre,salario,salario*1.5 || ' euros' "Salario Bruto" from futbolistas;

--18/12/2024 transaparencia 54
select upper(substr('hola',1,1))||'ola' from dual;
select initcap('hola') from dual;
--CONCAT() ||
select concat(concat(concat(concat(concat('1','.'),' '),'soy'),' '),'groot') from dual;
--1. Soy groot
select ceil(11) from dual;
select ceil(11.9) from dual;
select ceil(11.1) from dual;
select floor(11) from dual;
select floor(11.9) from dual;
select floor(11.1) from dual;
select mod(10,6) from dual; 
--10 / 6 = 1 _ 4
select power(10,2) from dual;
select round(17.5) from dual;
select round(17.4) from dual;
select round(17.4346,-1) from dual;
select sign(-5) from dual;

/*Ejercicio 12
Realiza las siguientes operaciones utilizando funciones numéricas:
1. Calcula el valor absoluto de -10.
2. Obtén el exponente en base e de 4.
3. Redondea el número 15,3 a 16.
4. Redondea el número anterior (15,3) a 15.
5. Calcula el resto de 15 entre 3 (15/3).
6. Eleva 15 al exponente 2 (152). */

select abs(-10) from dual;
select exp(4) from dual;
select ceil(15.3) from dual;
select round(15.3) from dual;
select ceil(15.3) from dual;


--  2 TRIMESTRE 8 DE ENERO 2025

/* DIAPOSITIVA 71. REPLACE(CADENA,ANT,NUEVA). Devuelve cadena donde se ha sustituido la aparición de 
ant por la cadena nue en todos los casos */

--SUSTITUIR LA LETRA O POR * EN LOS NOMBRES ANTERIORES
SELECT REPLACE(NOMBRE,'O','*') "NOMBRE" FROM FUTBOLISTAS;

-- QUIERO QUE LA QUERY ANTERIOR SEA INSENSIBLE A MAYUS Y MINUS
SELECT REPLACE(LOWER(NOMBRE),'o','*') "NOMBRE" FROM FUTBOLISTAS;
SELECT REPLACE(REPLACE(NOMBRE,'o','*'),'O','*') "NOMBRE" FROM FUTBOLISTAS;

select * from futbolistas where posicion = 'DEFENSA' and nombre like 'P%' order by nombre desc;
--Sustituir la letra O por * en los nombres anteriores Y sea insensible a mayúsculas y minúsculas
select id,replace(replace(nombre,'o','*'),'O','*') "NOMBRE",apellidos,fecha_nacimiento,posicion,salario,id_equipo
    from futbolistas where posicion = 'DEFENSA' and nombre like 'P%' order by nombre desc;
    
/*Primero inserta un nuevo futbolista con los siguientes datos:
ID: F80120
NOMBRE: MIGUEL
APELLIDOS: GARCIA
FECHA_NACIMIENTO: 22/02/1980
POSICION: DEFENSA
SALARIO: 350000
ID_EQUIPO: 1 */
-- PRIMERO COMPROBAMOS QUE NO HAY USUARIO CON ES ID.
SELECT * FROM FUTBOLISTAS WHERE ID = 'F80120';
INSERT INTO FUTBOLISTAS VALUES('F80120','MIGUEL','GARCIA','22/02/1980','DEFENSA',350000,1);

-- CAMBIAR EL NOMBRE DE MIGUEL A MINUS
UPDATE FUTBOLISTAS SET  NOMBRE = 'miguel' where id = 'F80120';
SELECT ID,REPLACE(REPLACE(NOMBRE,'E','*'),'e','*') "NOMBRE",APELLIDOS,FECHA_NACIMIENTO,POSICION,SALARIO,ID_EQUIPO
FROM FUTBOLISTAS WHERE POSICION = 'DEFENSA' ORDER BY NOMBRE DESC;

-- QUIERO QUEDARME EL PRIMER NOMBRE DE LOS FUTBOLISTAS
SELECT SUBSTR(NOMBRE,1,3) FROM futbolistas;
SELECT SUBSTR(NOMBRE,2) FROM futbolistas;
UPDATE FUTBOLISTAS SET  NOMBRE = ' miguel   ' where id = 'F80120';
SELECT NOMBRE,LENGTH(NOMBRE) FROM futbolistas;
SELECT NOMBRE,LENGTH(NOMBRE),TRIM(NOMBRE),LENGTH(TRIM(NOMBRE)) FROM futbolistas;
SELECT NOMBRE,REPLACE(NOMBRE,' ','') FROM futbolistas;
SELECT REPLACE(NOMBRE,' ','$') FROM futbolistas;
--INSTR
SELECT NOMBRE,INSTR(NOMBRE,' ') FROM FUTBOLISTAS;
SELECT NOMBRE,INSTR(NOMBRE,' '),INSTR(NOMBRE,' ',1,2) FROM FUTBOLISTAS;
SELECT NOMBRE,INSTR(NOMBRE,' '),INSTR(NOMBRE,' ',1,2),INSTR(NOMBRE,' ',2,2) FROM FUTBOLISTAS;
--SOLUCION
SELECT NOMBRE FROM FUTBOLISTAS;
select trim(substr(nombre,1,instr(nombre,' '))) from futbolistas where id = 'F00220';
SELECT SUBSTR(nombre, 1, INSTR(nombre, ' ') - 1)  FROM futbolistas;
select substr(nombre,1,(instr(nombre||' ',' '))) from futbolistas;
select substr(TRIM(nombre),1,(instr(TRIM(nombre)||' ',' '))) from futbolistas;

-- FECHAS
SELECT SYSDATE FROM DUAL;
SELECT SYSTIMESTAMP FROM DUAL;
SELECT NEXT_DAY(SYSDATE,'JUEVES') FROM DUAL;
SELECT EXTRACT(MONTH FROM SYSDATE) FROM DUAL;
SELECT TO_CHAR(SYSDATE,'MONTH') FROM DUAL;
SELECT TO_CHAR(TO_DATE('25/12/2024'),'MONTH') FROM DUAL;

--EJERCICIO 15(PAG 86)
--1. Obtén en tres columnas independientes, el día,el mes y la fecha de hoy.
SELECT EXTRACT(DAY FROM SYSDATE) AS DIA, EXTRACT(MONTH FROM SYSDATE)AS MES, EXTRACT(YEAR FROM SYSDATE)AS AÑO FROM DUAL;
--TO_CHAR(), TO_DATE(), TO_NUMBER()
select to_char(sysdate,'month'),to_char(sysdate,'dd'),to_char(sysdate,'mm'),sysdate from dual;
select to_char(to_date('09/01/2025'),'day') from dual;
select '10' + 1 from dual;
select to_number('10') + 1 from dual;
--2. Muestra por pantalla la fecha que será dentro de 6 meses utilizando ADD_MONTHS.
SELECT ADD_MONTHS(SYSDATE,6) FROM DUAL;
--3. Muestra el número de meses que hay entre hoy y la fecha de nacimiento de todos los futbolistas.
SELECT FLOOR(MONTHS_BETWEEN(SYSDATE,FECHA_NACIMIENTO))"MESES" FROM FUTBOLISTAS;
--4. ¿Cuál es el último día de este mes? Muéstralo.
SELECT LAST_DAY(SYSDATE) FROM DUAL;
--5. ¿Qué día será el próximo lunes? Ponlo por pantalla mediante una petición.
SELECT NEXT_DAY(SYSDATE,'LUNES') FROM DUAL;
--6. Muestra el día que era hace 4 días. ¿Y el día de mañana?
SELECT SYSDATE-4 FROM DUAL;
SELECT SYSDATE+1 FROM DUAL;

--Quiero saber cuántos años se llevan PEDRO LUIS y JESUS. Resultado: 10
SELECT * FROM FUTBOLISTAS;
SELECT CEIL(MONTHS_BETWEEN((SELECT FECHA_NACIMIENTO FROM FUTBOLISTAS WHERE NOMBRE = 'JESUS'),(SELECT FECHA_NACIMIENTO FROM FUTBOLISTAS WHERE NOMBRE = 'PEDRO LUIS')))/12 FROM DUAL;
SELECT CEIL(MONTHS_BETWEEN((SELECT FECHA_NACIMIENTO FROM FUTBOLISTAS WHERE NOMBRE = 'JESUS'),(SELECT FECHA_NACIMIENTO FROM FUTBOLISTAS WHERE NOMBRE = 'PEDRO LUIS'))/12) FROM DUAL;

-- EJEMPLOS TO NUMBER()
SELECT '1000€'-'20€' FROM DUAL; -- NO SE PUEDE
SELECT TO_NUMBER('$1000','$9999') FROM DUAL;
SELECT TO_NUMBER('1000€','9999L')-TO_NUMBER('20€','99L') AS "PRECIO" FROM DUAL;
SELECT TO_CHAR(SYSDATE,'MI DAY MONTH') FROM DUAL;
SELECT TRIM(TO_CHAR(SYSDATE,'MI DAY MONTH')) FROM DUAL;
SELECT TO_CHAR(SYSDATE,'MI')|| TRIM(TO_CHAR(SYSDATE,'MI'))|| FROM DUAL;

--Ejemplos to_number()
select trim(to_char(sysdate,'MI DAY:MONTH')) from dual;
select 
    to_char(sysdate,'MI') || 
    ' ' ||
    trim(to_char(sysdate,'DAY')) || 
    ':' || 
    trim(to_char(sysdate,'MONTH'))from dual;
select '09/01/2025' from dual;
select to_date('09/01/2025') from dual;
/* RESUMEN
TO_NUMBER('CADENA','MASCARA') -> NUMERO
TO_CHAR('FECHA','MASCARA') -> CHAR CON DATOS DE UNA FECHA
TO_DATE('CADENA') -> FECHA */

--EJERCICIO 16
--1. Convierte ‘1000.45’ a un número.
SELECT TO_NUMBER('1000.45','9999.99') FROM DUAL;
--2. Convierte ‘1000.45€’ a un número.
SELECT TO_NUMBER('1000.45€','9999.99L') FROM DUAL;
--3. Convierte ‘-$1000.45’ a un número.
SELECT TO_NUMBER('-$1000.45','S$9999.99') FROM DUAL;
--4. Muestra el día de hoy con los siguientes formatos:  12/02/2021, 12/02/21, 12-feb-2021, 12 de febrero de 2021
SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY') FROM DUAL;
SELECT TO_CHAR(SYSDATE,'DD/MM/YY') FROM DUAL;
SELECT TO_CHAR(SYSDATE,'DD-MON-YYYY') FROM DUAL;
SELECT TO_CHAR(SYSDATE,'DD')||'DE'||'MONTH') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'DD') || ' de ' || TRIM(TO_CHAR(SYSDATE,'MONTH'))||' DE ' TO_CHAR(SYSDATE,'YYYY') FROM DUAL;
REPLACE(TO_CHAR(SYSDATE, 'month'),' ','') || ' de ' ||
TO_CHAR(SYSDATE, 'YYYY') FROM DUAL;
--5. Convierte el ID de la tabla FUTBOLISTAS en un número de tres cifras.

--6. Muestra todos los años de nacimiento de los futbolistas (solo el año, ej.: 1990, 1991, etc.). Ordénalos de menor a mayor año.

-- FECHA 15/01/2025
-- FUNCIÓN NVL Y DECODE (PAG 99)
SELECT * FROM FUTBOLISTAS;
-- QUIERO PONER A NULL LA POSICION DE PEDRO LUIS Y EL SALARIO DE LUIS.
UPDATE NOMBRETABLA SET CAMPO1 = VALOR1, CAMPO2 = VALOR2, ... WHERE CONDICION;
--UPDATE FUTBOLISTAS SET POSICION = NULL, SALARIO = NULL WHERE NOMBRE = 'PEDRO LUIS';
UPDATE FUTBOLISTAS SET POSICION = NULL WHERE NOMBRE = 'PEDRO LUIS';
UPDATE FUTBOLISTAS SET SALARIO = NULL WHERE NOMBRE = 'LUIS';

--SE PIDE INTRODUCIR UN NUEVO REGISTRO EN LA TABLA FUTBOLISTAS CON LOS SIGUIENTES DATOS:
--  - ID DEBE CONTENER 004, NOMBRE = DIEGO, APELLIDOS = GOMEZ, FEC_NAC = 11-11-1998, POS= PORTERO, SALARIO=NULL, E ID_EQUIPO=1.
INSERT INTO NOMBRETABLA [CAMPOS] VALUES (VALORES_SEPARADOS_POR_COMAS);
INSERT INTO FUTBOLISTAS (ID,NOMBRE) VALUES ('','');
INSERT INTO FUTBOLISTAS VALUES ('','','',);
INSERT INTO FUTBOLISTAS (ID,NOMBRE,APELLIDOS,FECHA_NACIMIENTO,POSICION,SALARIO,ID_EQUIPO) VALUES ('F00420','DIEGO', 'GOMEZ','11/11/98','PORTERO',NULL,1);

SELECT SALARIO FROM FUTBOLISTAS;
SELECT NVL(SALARIO,0) FROM FUTBOLISTAS;-- DEBEN SER DEL MISMO TIPO, SI NO COINCIDEN DA ERROR. HAY QUE CAMBIAR EL TIPO CON TO_NUMBER O TO_CHAR
SELECT NVL(TO_CHAR(SALARIO),'NO TIENE') FROM FUTBOLISTAS;

--DECODE
SELECT DECODE(SALARIO,NULL,'NO TIENE') FROM FUTBOLISTAS;
SELECT DECODE(SALARIO,NULL,'NO TIENE',SALARIO) FROM FUTBOLISTAS;
SELECT DECODE(SALARIO,NULL,'NO TIENE',110000,'BUEN SUELDO',SALARIO) FROM FUTBOLISTAS;

/*EJERCICIO 17 PAG 100
Utiliza la función DECODE para mostrar, respecto de los EQUIPOS, el valor 1000k si el presupuesto es de 1000000,
2000k si el presupuesto es de 2000000, o 3000k si el presupuesto asciende a 3000000 */
SELECT * FROM EQUIPOS;
SELECT DECODE(PRESUPUESTO,1000000,'1000K',2000000,'2000K',3000000,'3000K') FROM EQUIPOS;
SELECT DECODE(TO_CHAR(PRESUPUESTO),1000000,'1000K',2000000,'2000K',3000000,'3000K') FROM EQUIPOS;

-- PDF 2. CONSULTAS Y AGRUPAMIENTOS.

-- FUNCIONES DE AGREGADO
-- COUNT() PARA CONTAR.
SELECT * FROM FUTBOLISTAS;
SELECT COUNT(*) FROM FUTBOLISTAS;
-- SUM() SUMA TODOS LOS SALARIOS
SELECT SUM(SALARIO) FROM FUTBOLISTAS;
-- MIN() TE DA EL VALOR MINIMO
SELECT MIN(SALARIO) FROM FUTBOLISTAS;
SELECT NOMBRE,MIN(SALARIO) FROM FUTBOLISTAS GROUP BY NOMBRE;
-- MAX() VALOR MAXIMO
SELECT MAX(SALARIO) FROM FUTBOLISTAS;
-- AVG() VALOR MEDIO
SELECT AVG(SALARIO) FROM FUTBOLISTAS;
SELECT ROUND(AVG(SALARIO),2)"SALARIO MEDIO" FROM FUTBOLISTAS;

SELECT * FROM FUTBOLISTAS;
SELECT POSICION FROM FUTBOLISTAS GROUP BY POSICION;
SELECT POSICION FROM FUTBOLISTAS;
SELECT DISTINCT POSICION FROM FUTBOLISTAS;

--¿CUANTOS JUGADORES SON PORTEROS?
SELECT COUNT(POSICION) FROM FUTBOLISTAS WHERE POSICION = 'PORTERO';
SELECT COUNT(*) FROM FUTBOLISTAS WHERE POSICION = 'PORTERO';
SELECT POSICION,COUNT(*) FROM FUTBOLISTAS WHERE POSICION = 'PORTERO' GROUP BY POSICION;
SELECT POSICION,COUNT(*) FROM FUTBOLISTAS GROUP BY POSICION HAVING POSICION = 'PORTERO';

--¿CUANTOS JUGADORES HAY EN CADA POSICION POSIBLE?
SELECT POSICION,COUNT(*) FROM FUTBOLISTAS GROUP BY POSICION;

--QUIERO LOS JUGADORES POR POSICION(NÚMERO) NO QUIERO QUE SALGA NULL COMO POSICION
SELECT POSICION,COUNT(*) FROM FUTBOLISTAS GROUP BY POSICION HAVING POSICION IS NOT NULL;

/* EJERCICIO 1 PAG 8
Modifica la tabla FUTBOLISTAS para añadir los dos siguientes campos:
• ALTURA: INT –se introducirá en cm
• PESO: NUMBER(4,1) –se introducirá en kg */
ALTER TABLE FUTBOLISTAS ADD ALTURA INT;
ALTER TABLE FUTBOLISTAS ADD PESO NUMBER(4,1);

/*Inserta los siguientes valores:
• PEDRO LUIS mide 1,79 m y pesa 76 kg.
• LUIS mide 1,74 m y pesa 71,5 kg.
• JESUS mide 1,69 m y pesa 66 kg.
• DIEGO mide 1,89 m y pesa 82 kg.
• PABLO mide 1,83 m y pesa 84 kg.
• ESTEBAN mide 1,80 m y pesa 81,5 kg.
• ENRIQUE mide 1,62 m y pesa 60 kg.*/
UPDATE FUTBOLISTAS SET ALTURA = 179, PESO = 76 WHERE NOMBRE LIKE 'PEDRO LUIS';
UPDATE FUTBOLISTAS SET ALTURA = 174, PESO = 71.5 WHERE NOMBRE LIKE 'LUIS';
UPDATE FUTBOLISTAS SET ALTURA = 169, PESO = 66 WHERE NOMBRE LIKE 'JESUS';
UPDATE FUTBOLISTAS SET ALTURA = 189, PESO = 82 WHERE NOMBRE LIKE 'DIEGO';
UPDATE FUTBOLISTAS SET ALTURA = 183, PESO = 84 WHERE NOMBRE LIKE 'PABLO';
UPDATE FUTBOLISTAS SET ALTURA = 180, PESO = 81.5 WHERE NOMBRE LIKE 'ESTEBAN';
UPDATE FUTBOLISTAS SET ALTURA = 162, PESO = 60 WHERE NOMBRE LIKE 'ENRIQUE';
SELECT * FROM FUTBOLISTAS;
-- Obtén el nombre del futbolista más alto.
SELECT NOMBRE FROM FUTBOLISTAS WHERE ALTURA = (SELECT MAX(ALTURA) FROM FUTBOLISTAS); 
-- Indica los apellidos del futbolista más delgado.
SELECT APELLIDOS FROM FUTBOLISTAS WHERE ALTURA = (SELECT MIN(ALTURA) FROM FUTBOLISTAS); 
-- ¿Cuántos futbolistas miden entre 1,75 y 1,82?
SELECT COUNT(*) FROM FUTBOLISTAS WHERE ALTURA BETWEEN 175 AND 182;
-- ¿Cuál es la media de altura de los futbolistas con dos decimales?
SELECT ROUND(AVG(ALTURA),2) FROM FUTBOLISTAS;
-- ¿Cuál es la media de peso de los futbolistas con un decimal?
SELECT ROUND(AVG(PESO),1) FROM FUTBOLISTAS;

-- SE QUIERE SABER LA MEDIA PERO POR POSICION
SELECT POSICION,ROUND(AVG(ALTURA),2) FROM FUTBOLISTAS GROUP BY POSICION HAVING POSICION IN ('DEFENSA','PORTERO');
SELECT NOMBRE,ROUND(MAX(ALTURA),2) FROM FUTBOLISTAS GROUP BY NOMBRE;
SELECT POSICION,COUNT(*) FROM FUTBOLISTAS WHERE ALTURA > 179 GROUP BY POSICION;

--Ejercicio 2
--¿Cuál es el futbolista que cobra más dinero?
SELECT NOMBRE FROM FUTBOLISTAS WHERE SALARIO = (SELECT MAX(SALARIO) FROM FUTBOLISTAS);
--¿En qué año nació el futbolista que cobra menos dinero?
SELECT FECHA_NACIMIENTO FROM FUTBOLISTAS WHERE SALARIO = (SELECT MIN(SALARIO) FROM FUTBOLISTAS);
SELECT TO_CHAR(FECHA_NACIMIENTO,'YYYY')"AÑO" FROM FUTBOLISTAS WHERE SALARIO = (SELECT MIN(SALARIO) FROM FUTBOLISTAS);

--Ejercicio 3
--Calcula la media del sueldo de los futbolistas (con dos decimales) agrupado por la posición que ocupan.
SELECT POSICION,ROUND(AVG(SALARIO),2) FROM FUTBOLISTAS GROUP BY POSICION;
SELECT POSICION,ROUND(AVG(SALARIO),2) FROM FUTBOLISTAS GROUP BY POSICION,SALARIO HAVING POSICION IS NOT NULL AND SALARIO IS NOT NULL;
--Obtén el número de futbolistas en cada equipo.
SELECT * FROM FUTBOLISTAS;
SELECT ID_EQUIPO,COUNT(*)"N_JUGADORES" FROM FUTBOLISTAS GROUP BY ID_EQUIPO;
--Obtén ahora el número de futbolistas de cada equipo cuyo ID sea 1 o 2.
SELECT ID_EQUIPO,COUNT(*)"N_JUGADORES" FROM FUTBOLISTAS GROUP BY ID_EQUIPO HAVING ID_EQUIPO IN(1,2);

-- FECHA MIERCOLES 22 DE ENERO 2025  
-- PDF 3 MULTITABLAS
SELECT * FROM FUTBOLISTAS;
SELECT * FROM EQUIPOS,FUTBOLISTAS WHERE EQUIPOS.ID = ID_EQUIPO;
SELECT * FROM FUTBOLISTAS;
INSERT INTO FUTBOLISTAS VALUES ('F01020','NUEVO',NULL,NULL,'PORTERO',200000,NULL,NULL,NULL);
SELECT * FROM EQUIPOS;
INSERT INTO EQUIPOS VALUES ('4','EQUIPO D','ESTADIO D',4000000);

--JOIN CON DOS TABLAS
SELECT * FROM FUTBOLISTAS JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO;
--JOIN CON 3 TABLAS
SELECT * FROM FUTBOLISTAS 
    JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO
    JOIN PARTIDOS ON PARTIDOS.ID_EQUIPO_CASA = EQUIPOS.ID;
--JOIN CON 3 TABLAS LLAMANDO OTRA VEZ A PARTIDOS
SELECT * FROM FUTBOLISTAS 
    JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO
    JOIN PARTIDOS ON PARTIDOS.ID_EQUIPO_CASA = EQUIPOS.ID
    JOIN PARTIDOS P2 ON P2.ID_EQUIPO_FUERA = EQUIPOS.ID;
    
SELECT * FROM FUTBOLISTAS;
SELECT * FROM EQUIPOS;

-- LEFT JOIN DE FUTBOLISTAS CON EQUIPOS. QUEREMOS VER TODOS LOS FUTBOLISTAS QUE TENGAN EQUIPO O NO.
SELECT * FROM FUTBOLISTAS JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO; -- 7 CON EQUIPO
SELECT * FROM FUTBOLISTAS LEFT JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO;--8 futbolistas, 1 sin equipo
--Right join para tener todos los equipos, tengan o no futbolistas jugando en ellos
SELECT * FROM FUTBOLISTAS RIGHT JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO;--4 equipos en la lista con todos los jugadores que tienen equipo
--FULL OUTER JOIN
SELECT * FROM FUTBOLISTAS FULL OUTER JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO;--MEGATABLA

/*ESTRUCTURA: 
SELECT (COLUMNAS) FROM (TABLA1) 
    JOIN (TABLA2) ON (EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO) 
        WHERE (..) GROUP BY (..) 
            HAVING (..) ORDER BY (..); */


/*Ejercicio 7 PAG 25
Muestra el nombre de los futbolistas seguido del nombre del equipo en el que juega utilizando JOIN … ON */
SELECT FUTBOLISTAS.NOMBRE,EQUIPOS.NOMBRE FROM FUTBOLISTAS JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO;
/*Ejercicio 8
Obtén el nombre, apellidos y nombre del equipo de los futbolistas que sean defensas.*/
SELECT FUTBOLISTAS.NOMBRE,FUTBOLISTAS.APELLIDOS,EQUIPOS.NOMBRE FROM FUTBOLISTAS 
    JOIN EQUIPOS ON EQUIPOS.ID = FUTBOLISTAS.ID_EQUIPO WHERE POSICION = 'DEFENSA';
-- LO MISMO PERO CON A FUTBOLISTA LE LLAMO F Y EQUIPO LE LLAMO E.
SELECT F.NOMBRE,F.APELLIDOS,E.NOMBRE FROM FUTBOLISTAS F 
    JOIN EQUIPOS E ON E.ID = F.ID_EQUIPO WHERE POSICION = 'DEFENSA';  
/*Ejercicio 9
Obtén el nombre, apellidos y nombre del equipo de los futbolistas con un LEFT JOIN y un RIGHT JOIN. ¿Cuál es la diferencia?*/
SELECT F.NOMBRE,F.APELLIDOS,E.NOMBRE FROM FUTBOLISTAS F 
    LEFT JOIN EQUIPOS E ON E.ID = F.ID_EQUIPO;
SELECT F.NOMBRE,F.APELLIDOS,E.NOMBRE FROM FUTBOLISTAS F 
    RIGHT JOIN EQUIPOS E ON E.ID = F.ID_EQUIPO;
    
-- USANDO DOS SELECT Y UNION, UNE LOS PORTEROS  CON LOS DELANTEROS. SELECT1 SOLO TRAE LOS PORTEROS Y SELECT2 SOLO LOS DELANTEROS.
SELECT * FROM FUTBOLISTAS WHERE POSICION = 'PORTERO' UNION SELECT * FROM FUTBOLISTAS WHERE POSICION = 'DELANTERO';

/*Ejercicio 10
Combina con UNION los salarios y presupuestos equipos para tener en una única
columna de resultados los valores monetarios de la base de datos (llámale a esa columna euros).*/
SELECT * FROM FUTBOLISTAS;
SELECT * FROM EQUIPOS;
SELECT SALARIO "EUROS" FROM FUTBOLISTAS UNION SELECT PRESUPUESTO FROM EQUIPOS;

/*Ejercicio 11
Combina con INTERSECT los estadios de los equipos y los partidos  */
SELECT * FROM PARTIDOS;
SELECT ESTADIO FROM EQUIPOS INTERSECT SELECT ESTADIO FROM PARTIDOS ; 

--MINUS COGE LOS DATOS DEL PRIMER SELECT Y LOS QUITA DEL SEGUNDO
--EJERCICIO 12 Combina con MINUS los estadios de los equipos y de los partidos (en ese orden).
SELECT ESTADIO FROM EQUIPOS;
SELECT ESTADIO FROM PARTIDOS;
SELECT ESTADIO FROM EQUIPOS MINUS SELECT ESTADIO FROM PARTIDOS ; 

